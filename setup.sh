#!/bin/bash
echo 'The following script will install the necessary dependencies for the RPI Dashcam.'
echo 'NOTE: This project is intented to work for the Logitech C920 USB Camera.'

read -p "Would you like to continue? (y/N)" answer
if [ "$answer" = "n" ] || [ "$answer" = "N" ] || [ "$answer" = "" ]
then
  echo "Setup aborted"
  exit
fi

#Update RPI
sudo apt-get -y update

printf "Checking for node...\n\n\n"
# Install the most recent version of NodeJS if not already installed
command -v node >/dev/null 2>&1 || {
    #installing node
    echo "Installing nodejs..."
    curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -
    sudo apt-get -y install nodejs

    if command -v nodejs >/dev/null 2>&1
    then
        TEXT="alias node=nodejs"
        echo "Node is installed as nodejs."
        grep -F "$TEXT" ~/.bashrc >/dev/null 2>&1
        echo "$TEXT" >> ~/.bashrc
        source ~/.bashrc
    fi
}

printf "Checking for yarn...\n\n\n"
# Install Yarn if not already installed
command -v yarn >/dev/null 2>&1 ||  { 
    echo "Installing yarn..."; 
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    sudo apt update && sudo apt install yarn
}


printf "Installing Repository...\n\n\n"
# install repo
yarn install


printf "Setting up iptables for site...\n\n\n"
# Make iptables rules persistent
sudo apt-get -y install iptables-persistent

# # Redirect http traffic to static website at port 500000
# sudo iptables -t nat -A PREROUTING -p tcp -m tcp -s 192.168.10.0/24 --dport 443 -j DNAT --to-destination 192.168.10.1:50000
# sudo iptables -t nat -A PREROUTING -p tcp -m tcp -s 192.168.10.0/24 --dport 80 -j DNAT --to-destination 192.168.10.1:50000

sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 192.168.10.1:50000
sudo iptables -t nat -A POSTROUTING -j MASQUERADE

sudo iptables-save > /etc/iptables/rules.v4

#Check if python3 is installed (Should be already there by default)
command -v python3 >/dev/null 2>&1 || {
    echo "Installing python3..."
    sudo apt-get -y install python3
}

#Install v4l2-utils for USB Webcam interfacing
command -v v4l2-ctl >/dev/null 2>&1 ||  { 
    printf "Installing V4L2 tools...\n\n\n"; 
    sudo apt-get -y install v4l-utils
}

# Verify if gstreamer is already installed, otherwise install necessary
# plugins
command -v gst-inspect-1.0 >/dev/null 2>&1 || {
    printf "Installing gstreamer plugins...\n\n\n"
    # gstreamer plugins
    sudo apt-get -y install libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer-1.0 gstreamer1.0-dev
}

printf "Installing python plugins for gstreamer...\n\n\n"
#Installing GI, GST for python
# https://pygobject.readthedocs.io/en/latest/getting_started.html
sudo apt-get -y install python3-gi python-gst-1.0 python3-gi-cairo gir1.2-gtk-3.0
sudo apt-get -y install libgirepository1.0-dev
sudo apt-get -y install libcairo2-dev gir1.2-gstreamer-1.0



#Install necessary files for RTC

printf "Starting Access Point setup...\n\n"
#Update files for wireless RPI Access Point
sudo apt install -y dnsmasq hostapd
sudo systemctl stop dnsmasq
sudo systemctl stop hostapd

# Set wlan0 static IP and subnet

#NOTE: This did not get written in the dhcpcd.conf file during install
WAN_INTERFACE="
interface wlan0
    static ip_address=192.168.10.1/24
    nohook wpa_supplicant"

if [grep -F "$WAN_INTERFACE" /etc/dhcpcd.conf >/dev/null 2>&1] 
then
    printf "wlan0 interface exists...\n"
else
    printf "Setting Static IP address for wifi...\n\n"
    sudo echo "$WAN_INTERFACE" >> /etc/dhcpcd.conf
    # When source config for dhcpcd is changed, daemon must be reloaded
    sudo systemctl daemon-reload
    sudo service dhcpcd restart
fi

printf "Setting host...\n\n"
# Update hosts
HOST="192.168.10.1    rpidashcam"
grep -F "$HOST" /etc/hosts >/dev/null 2>&1 || {
    sudo echo "$HOST" >> /etc/hosts
}

printf "Setting dnsmasq...\n\n"
FILE=/etc/dnsmasq.conf.orig
if test -f "$FILE"; then
    echo "$FILE exists"
else
    # Update dnsmasq.conf for dns and dhcp
    sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig
fi

DNSMASQ_CONFIG="
listen-address=127.0.0.1,192.168.10.1
expand-hosts
domain=com
address=/com/192.168.10.1
address=/com/127.0.0.1

interface=wlan0      # Use the require wireless interface - usually wlan0
dhcp-range=192.168.10.10,192.168.10.30,255.255.255.0,24h"

sudo echo "$DNSMASQ_CONFIG" > /etc/dnsmasq.conf
sudo systemctl restart dnsmasq

# Update resolv.conf
RESOLV_OPT="
# Generated by resolvconf
domain com
nameserver 127.0.0.1
nameserver 192.168.10.1
"

# Check for write permission
if [lsattr /etc/resolv.conf | grep i >/dev/null 2>&1]
then
    sudo chattr -i /etc/resolv.conf
fi

sudo echo "$RESOLV_OPT" > /etc/resolv.conf
sudo chattr +i /etc/resolv.conf

printf "Setting AP configuration...\n\n"
# update hostapd configuration
HOSTAPD_CONFIG="
interface=wlan0
driver=nl80211
ssid=RPIDASHCAM
hw_mode=g
channel=7
wmm_enabled=0
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=rpiDashCam
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP"

sudo echo "$HOSTAPD_CONFIG" > /etc/hostapd/hostapd.conf

echo "DAEMON_CONF=\"/etc/hostapd/hostapd.conf\"" | sudo tee -a /etc/default/hostapd 

#unblock WiFi
sudo rfkill unblock 0

#start the hostapd service 
sudo systemctl unmask hostapd
sudo systemctl enable hostapd
sudo systemctl start hostapd

#Install Dashcam Server
# yarn install

echo "Installation complete. To run the application enter 'yarn start' in the installation directory".
echo "The raspberry pi will automatically look for the C920 Camera in the first 5 seconds of startup."
echo "If the camera is found, the dashcam app will automatically run. To shutdown, use the Shutdown button in the Web Application."
echo "Pulling the power on the raspberry pi may cause SD Card corruption."