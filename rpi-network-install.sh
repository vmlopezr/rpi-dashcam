#!/bin/bash

printf "\nStarting Access Point setup...\n"

echo 'Installing v4l2-utils'
#Install v4l2-utils for USB Webcam interfacing
command -v v4l2-ctl >/dev/null 2>&1 ||  { 
    printf "\n\nInstalling V4L2 tools...\n\n\n"; 
    apt-get -y install v4l-utils
}

printf "\n\nSetting up iptables for site...\n\n\n"
# Make iptables rules persistent
echo iptables-persistent iptables-persistent/autosave_v4 boolean true | debconf-set-selections
echo iptables-persistent iptables-persistent/autosave_v6 boolean true | debconf-set-selections
apt-get -y install iptables-persistent

# Redirect http traffic to static website at port 500000
sh install-scripts/install-iptable-rules.sh
iptables-save > /etc/iptables/rules.v4


printf "\n\nUnzipping static files for website\n\n"
#unzip static files
unzip static-website.zip

printf "Installing dnsmasq and hostapd.\n\n"
#Update files for wireless RPI Access Point
apt install -y dnsmasq hostapd
systemctl stop dnsmasq
systemctl stop hostapd

# DHCPCD update
# Set wlan0 interface: static IP and subnet
WAN_INTERFACE="
interface wlan0
    static ip_address=192.168.10.1/24
    nohook wpa_supplicant"

# Append to /etc/dhcpcd.conf if 
grep -F "$WAN_INTERFACE" /etc/dhcpcd.conf >/dev/null 2>&1 && {
    mv /etc/dhcpcd.conf /etc/dhcpcd.conf.orig
    printf "\nSetting Static IP address for wifi...\n\n"
    echo "$WAN_INTERFACE" >> /etc/dhcpcd.conf

    # When source config for dhcpcd is changed, daemon must be reloaded
    systemctl daemon-reload
    service dhcpcd restart
}

printf "\nSetting host...\n\n"
HOST="192.168.10.1    rpicam"
grep -F "$HOST" /etc/hosts >/dev/null 2>&1 || {
    echo "$HOST" >> /etc/hosts
}

printf "\nSetting dnsmasq...\n\n"
FILE=/etc/dnsmasq.conf.orig
if test -f "$FILE"; then
    echo "$FILE exists"
else
    # Update dnsmasq.conf for dns and dhcp
    mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig
fi

DNSMASQ_CONFIG="
interface=wlan0      
domain-needed
bogus-priv
listen-address=127.0.0.1,192.168.10.1
expand-hosts
no-resolv
no-poll
domain=pi
server=8.8.8.8
server=8.8.4.4
local=/pi/
address=/pi/192.168.10.1
dhcp-range=192.168.10.10,192.168.10.30,255.255.255.0,24h
"
# Set dnsmasq configuration
echo "$DNSMASQ_CONFIG" > /etc/dnsmasq.conf
systemctl restart dnsmasq

# Update resolv.conf
RESOLV_OPT="
# Generated by resolvconf
domain pi
nameserver 127.0.0.1
nameserver 192.168.10.1
"

# Check for write permission
if lsattr /etc/resolv.conf | grep i >/dev/null 2>&1
then
    chattr -i /etc/resolv.conf
fi

echo "$RESOLV_OPT" > /etc/resolv.conf
chattr +i /etc/resolv.conf

printf "\nSetting AP configuration...\n\n"
# update hostapd configuration for 5.0 GHz Wi-Fi
HOSTAPD_CONFIG="
interface=wlan0
hw_mode=a
driver=nl80211
macaddr_acl=0
channel=36
wmm_enabled=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
ssid=RPI-Webcam-Viewer
wpa_passphrase=rpiCamView
"

echo "$HOSTAPD_CONFIG" > /etc/hostapd/hostapd.conf

HOSTAPD_DAEMON_CONFIG="DAEMON_CONF=\"/etc/hostapd/hostapd.conf\""
grep -F "$HOSTAPD_DAEMON_CONFIG" /etc/default/hostapd >/dev/null 2>&1 || {
    echo "DAEMON_CONF=\"/etc/hostapd/hostapd.conf\"" | tee -a /etc/default/hostapd 
}

#unblock WiFi
rfkill unblock 0

#start the hostapd service 
systemctl unmask hostapd
systemctl enable hostapd
systemctl start hostapd

printf "\n\nInstalling real-time clock dependencies\n\n"
#Install necessary files for RTC
sh install-scripts/rtc-install.sh

echo "Installation complete. To run the application enter 'yarn start' in the installation directory".
echo "The raspberry pi will automatically look for the C920 Camera in the first 5 seconds of startup."
echo "NOTICE: Plugging the power to the RaspberryPi may corrupt the SD."
echo "To shutdown, use the Shutdown button in the Web Application or use \"sudo shutdown -h now\""
echo "Shutdown or reboot the raspberry pi to allow the changes to the wifi network and hwclock."
